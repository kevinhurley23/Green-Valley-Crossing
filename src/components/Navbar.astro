---
import NavFolders from "./NavFolders.astro";

const tallNav = 180;
const shortNav = 80;
---

<div id="navbar-background"></div>
<div class="navbar desktop">
  <a href="/Green-Valley-Crossing/">Home</a>
  <a href="/Green-Valley-Crossing/#welcome-section">Welcome</a>
  <a href="/Green-Valley-Crossing/#contact-section">Contact Us</a>
  <a href="/Green-Valley-Crossing/" id="nav-img-link" class="desktop">
    <img src="img/gvc-logo.png" alt="Green Valley Crossing logo" id="logo" />
  </a>
  <NavFolders />
</div>
<div id="mobile-toggle-container">
  <div class="container">
    <i id="mobile-toggle" class="fa-solid fa-bars"></i>
  </div>
</div>
<div class="navbar mobile">
    <div class="container">
      <a href="/Green-Valley-Crossing/">Home</a>
    <a href="/Green-Valley-Crossing/#welcome-section">Welcome</a>
    <a href="/Green-Valley-Crossing/#contact-section">Contact Us</a>
    <NavFolders />
  </div>
</div>

<style is:global lang="scss">
  @import "../styles/_variables.scss";

  .navbar {
    a,
    p {
      color: white;
      text-decoration: none;
      text-transform: uppercase;
      font-weight: 500;
    }
    &.desktop {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 2rem;
      padding: 2rem;
      position: fixed;
      top: 0;
      z-index: 10;
      width: 100%;
      box-sizing: border-box;
      a:hover {
        color: $gray2;
      }
      a:after {
        content: "";
        height: 5px;
        display: block;
        visibility: hidden;
      }
      #nav-img-link {
        @media screen and (max-width: $tablet) {
          display: none;
        }
        #logo {
          width: 300px;
        }
      }
      .sub-menu {
        display: none;
        position: absolute;
        left: -10px;
        background-color: $gray5;
        width: auto;
        padding: 5px 15px 15px;
        a {
          display: block;
          margin-top: 10px;
          width: 100%;
          white-space: nowrap;
        }
      }
      .folder {
        position: relative;
        &:hover .sub-menu {
          display: block;
        }
      }
    }
    &.mobile {
      position: fixed;
      z-index: 9;
      background: linear-gradient($gray5, $gray4);
      top: 80px;
      bottom: 0;
      right: 0;
      left: 0;
      overflow: auto;
      padding: 1rem 0 3rem;
      font-size: min(2rem, 8vw);
      .container {
        display: flex;
        flex-direction: column;
        gap: 2rem;
      }
      p {
        margin: 0;
        display: inline;
      }
      .caret {
        margin-left: 10px;
        display: inline-block;
        transition: 0.3s;
      }
      .sub-menu {
        a {
          display: block;
          font-size: 0.7em;
          margin-top: 0.5rem;
        }
      }
    }
  }

  #navbar-background {
    background-color: $gray5;
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 0;
  }

  #mobile-toggle {
    color: white;
    font-size: 28px;
    position: fixed;
    top: 27px;
    z-index: 10;
    @media screen and (min-width: $mobile) {
      display: none;
    }
  }

  @media (max-width: $mobile) {
    .navbar.desktop, .navbar .desktop {
      display: none;
    }
  }
  @media (min-width: $mobile) {
    .navbar.mobile, .navbar .mobile {
      display: none;
    }
  }
</style>

<script define:vars={{ shortNav, tallNav }}>
  const logo = document.querySelector("#logo");
  const logoLink = document.querySelector("#nav-img-link");
  const background = document.querySelector("#navbar-background");
  const toggle = document.querySelector("#mobile-toggle");
  const mobileNav = document.querySelector(".navbar.mobile");
  const folders = document.querySelectorAll(".navbar.mobile .folder");
  const time = 200;
  let animationInProgress = false;
  let menuIsOpen = false;

  window.innerWidth > 1150
    ? (background.style.height = tallNav + "px")
    : (background.style.height = shortNav + "px");

  function closeFolders() {
    document
      .querySelectorAll(".navbar.mobile .sub-menu")
      .forEach(function (node) {
        node.style.display = "none";
      });
    document.querySelectorAll(".navbar.mobile .caret").forEach(function (node) {
      node.style.transform = "rotate(0deg)";
    });
  }

  closeFolders();

  mobileNav.style.display = "block";
  mobileNav.style.bottom = "auto";
  const mobileNavHeight = mobileNav.offsetHeight;
  mobileNav.style.top = -mobileNavHeight - shortNav + "px";
  mobileNav.style.removeProperty("display");

  function hideLogo() {
    animationInProgress = true;
    const animation = logo.animate(
      {
        width: 0,
        opacity: 0,
      },
      time
    );
    background.animate({ height: shortNav + "px" }, time);
    animation.addEventListener("finish", () => {
      logo.style.width = "0px";
      logo.style.opacity = 0;

      background.style.height = shortNav + "px";
    });
    setTimeout(() => {
      if (animationInProgress) {
        logo.style.display = "none";
        logoLink.style.display = "none";
      }
    }, time * 0.5);
  }

  function showLogo() {
    if (window.innerWidth > 1150) {
      animationInProgress = false;

      logo.style.display = "block";
      logoLink.style.removeProperty("display");
      const animation = logo.animate(
        {
          width: "300px",
          opacity: 1,
        },
        time
      );
      background.animate({ height: tallNav + "px" }, time);
      animation.addEventListener("finish", () => {
        logo.style.width = "300px";
        logo.style.opacity = 1;
        background.style.height = tallNav + "px";
      });
    }
  }

  window.addEventListener("scroll", () => {
    if (window.scrollY > 0) {
      hideLogo();
    } else {
      showLogo();
    }
  });

  let hasTriggered = false;
  window.addEventListener("resize", function () {
    if (window.innerWidth > 800 && !hasTriggered) {
      background.style.zIndex = "0";
      if (window.scrollY > 0) {
        logoLink.style.display = "none";
      } else {
        logoLink.style.removeProperty("display");
        logo.removeAttribute("style");
      }
      hasTriggered = true;
    } else if (window.innerWidth <= 800) {
      hasTriggered = false;
    }
  });

  toggle.addEventListener("click", function () {
    if (menuIsOpen) {
      // close menu
      menuIsOpen = false;
      toggle.classList.remove("fa-x");
      toggle.classList.add("fa-bars");
      background.style.zIndex = "0";
      mobileNav.style.bottom = "auto";
      mobileNav.animate({ top: -mobileNavHeight + "px" }, time);
      setTimeout(() => {
        mobileNav.style.top = -mobileNavHeight + "px";
      }, time * 0.9);
      closeFolders();
    } else {
      // open menu
      menuIsOpen = true;
      toggle.classList.remove("fa-bars");
      toggle.classList.add("fa-x");
      mobileNav.animate({ top: shortNav + "px", bottom: "0" }, time);
      setTimeout(() => {
        mobileNav.style.top = shortNav + "px";
        mobileNav.style.bottom = "0";
        background.style.zIndex = "5";
      }, time * 0.8);
    }
  });

  folders.forEach((folder) => {
    folder.addEventListener("click", function () {
      const submenu = this.querySelector(".sub-menu");
      const caret = this.querySelector(".caret");
      if (submenu.style.display === "none") {
        submenu.style.display = "block";
        caret.style.transform = "rotate(90deg)";
      } else {
        submenu.style.display = "none";
        caret.style.transform = "rotate(0deg)";
      }
    });
  });
</script>
